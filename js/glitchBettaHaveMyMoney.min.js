'use strict';

function glitchBettaHaveMyMoney(canvasInput,imgSrcInput) {


    var canvas = canvasInput,
        ctx = canvas.getContext('2d'),
        img = new Image(),
        currentFrame = 0,
        totalFrame = 10,
        offset = .01,
        width,
        height,
        imgData,
        data,
        requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;

    window.requestAnimationFrame = requestAnimationFrame;

    img.crossOrigin = "Anonymous";
    img.src = imgSrcInput;

    img.onload = function () {
        init();
        glitchAnimation();
    };

    /**
     * init
     */
    var init = (function () {
        canvas.width = width = img.width * .5;
        offset = width * offset;
        canvas.height = height = ~ ~(img.height * (width - offset * 2) / img.width);
        document.querySelector('.glitch-image').style.width = width + 'px';
        document.querySelector('.glitch-image').style.height = height + 'px';
    }).bind(this);

    /**
     * glitchAnimation
     */
    var glitchAnimation = function glitchAnimation() {

        //
        if (!(currentFrame % totalFrame) || currentFrame > totalFrame) {

            clearCanvas();

            //
            ctx.drawImage(img, //
                0, //
                0, //
                img.width, //
                img.height, //
                offset, //
                0, //
                width - offset * 2, //
                height); //

            imgData = ctx.getImageData(0, 0, width, height);

            //imgData = pixelProcessor(imgData, 4, pixelCooler);

            ctx.putImageData(imgData, 0, 0);

            currentFrame = 0;
        }

        if (currentFrame === randInt(0, totalFrame)) {

            imgData = pixelProcessor(imgData, 1, pixelFlick);

            ctx.putImageData(imgData, 0, 0);

            drawGlitch(width, height, randInt(3, 10), glitchBlock);

            drawGlitch(width, height, randInt(3, 30), glitchLine);
        }

        currentFrame++;

        window.requestAnimationFrame(glitchAnimation);
    };

    /**
     * pixelFlick
     * @param  {number}   i
     * @param  {number[]} d
     */
    var pixelFlick = function pixelFlick(i, d) {
        d[i] = d[i + 16];
    };

    /**
     * pixelCooler
     * @param  {number}   i
     * @param  {number[]} d
     */
    var pixelCooler = function pixelCooler(i, d) {
        d[i] = 1;
        d[i + 1] += randInt(2, 5);
        d[i + 2] *= randInt(1, 3) + 8;
    };

    /**
     * glitchBlock
     * @param  {number} i
     * @param  {number} x
     * @param  {number} y
     */
    var glitchBlock = function glitchBlock(i, x, y) {
        if (i > 3) {
            var spliceHeight = 1 + randInt(0, 10);

            ctx.drawImage(canvas, x, y, x, spliceHeight, randInt(0, x), y, randInt(x, width), spliceHeight);
        }
    };

    /**
     * glitchLine
     * @param  {number} i
     * @param  {number} x
     * @param  {number} y
     */
    var glitchLine = function glitchLine(i, x, y) {
        var spliceHeight = 1 + randInt(1, 50);

        ctx.drawImage(canvas, offset, y, width - offset * 2, spliceHeight, 1 + randInt(0, offset * 2), //-offset / 3 + randInt(0, offset / 1.5),
            y + randInt(0, 10), width - offset, spliceHeight);
    };

    /**
     * pixelProcessor
     * @param  {Object}     imageData
     * @param  {number}     step
     * @param  {Function}   callback
     * @return {Object}
     */
    var pixelProcessor = function pixelProcessor(imageData, step, callback) {
        var data = imageData.data || [],
            step = step * 4 || 4;

        if (data.length) {
            var rgb = [];

            for (var i = 0; i < data.length; i += step) {
                callback && callback(i, data);
            }

            return imageData;
        } else {
            return imageData;
        }
    };

    /**
     * drawGlitch
     * @param  {number}   width
     * @param  {number}   height
     * @param  {number}   amount
     * @param  {Function} callback
     */
    var drawGlitch = function drawGlitch(width, height, amount, callback) {
        for (var i = 0; i < (amount || 10); i++) {
            var x = Math.random() * width + 1,
                y = Math.random() * height + 1;

            callback(i, x, y);
        }
    };

    /**
     * randInt
     */
    var randInt = function randInt(a, b) {
        return ~ ~(Math.random() * (b - a) + a);
    };

    /**
     * clearCanvas
     */
    var clearCanvas = function clearCanvas() {
        ctx.clearRect(0, 0, width, height);
    };
};